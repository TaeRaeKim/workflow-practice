name: API 트리거 테스트

# repository_dispatch 이벤트에서 사용할 이름을 지정
run-name: ${{ github.event.client_payload.display_name || github.workflow }}

# 두 가지 이벤트 모두에 응답하도록 설정
on:
  # repository_dispatch 이벤트에 대한 설정
  repository_dispatch:
    types: [custom_event]
  
  # workflow_dispatch 이벤트에 대한 설정
  workflow_dispatch:
    inputs:
      input1:
        description: '테스트 입력값 1'
        required: true
        default: 'default value 1'
      input2:
        description: '테스트 입력값 2'
        required: false
        default: 'default value 2'

jobs:
  test-trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: 이벤트 정보 출력
        run: |
          echo "Event triggered successfully!"
          echo "Event name: ${{ github.event_name }}"
          echo "Event path: ${{ github.event_path }}"
          
      - name: repository_dispatch payload 출력
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "Repository Dispatch Event Type: ${{ github.event.action }}"
          echo "Client Payload:"
          echo "key1: ${{ github.event.client_payload.key1 }}"
          echo "key2: ${{ github.event.client_payload.key2 }}"

      - name: workflow_dispatch inputs 출력
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Workflow Dispatch Inputs:"
          echo "input1: ${{ github.event.inputs.input1 }}"
          echo "input2: ${{ github.event.inputs.input2 }}"

      - name: 테스트 파일 생성
        run: |
          echo "Test run at $(date)" > test_output.txt
          echo "Event type: ${{ github.event_name }}" >> test_output.txt

      - name: 결과 업로드
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test_output.txt
